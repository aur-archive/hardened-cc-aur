#! /usr/bin/perl
use strict;
use warnings;
use File::Spec qw(rel2abs);
use File::Basename;

my @args = ();
my $enabled = 1;

# System settings

# Environment settings
$enabled = 1;
my $force_stack = 1;
my $force_fortify = 1;
my $force_format = 0;
my $force_pie = 1;
my $force_fPIE = 1;

if ($enabled) {
    # Scan arguments 
    my $linking = 1;
    foreach my $arg (@ARGV) {
        if ($arg eq "-fno-PIC" ||
            $arg eq "-fno-pic" ||
            $arg eq "-fno-PIE" ||
            $arg eq "-fno-pie" ||
            $arg eq "-nopie" ||
            $arg eq "-static" ||
            $arg eq "-shared" ||
            $arg eq "-D__KERNEL__" ||
            $arg eq "-nostdlib" ||
            $arg eq "-nostartfiles")
        {
            # If any PIC or PIE things are explicitly disabled,
            # disable all our PIE flags.
            $force_fPIE = 0;
            $force_pie = 0;
        }
        if ($arg eq "-fPIC" ||
            $arg eq "-fpic")
        {
            # fPIC is a stricter version of fPIE, so don't use fPIE when
            # we encounter fPIC.  However, the inclusion of -fPIC does
            # not mean we need to block the use of "-pie", which is still
            # possible with fPIC.
            $force_fPIE = 0;
        }
        if ($arg eq "-c") {
            $linking = 0;
        }
        if ($arg =~ /^-D_FORTIFY_SOURCE(=|$)/) {
            $force_fortify = 0;
        }
        if ($arg eq "-nostdlib" ||
            $arg eq "-ffreestanding") {
            $force_stack = 0;
        }
    }

    # Enable SSP by default
    if ($force_stack) {
        push(@args,'-fstack-protector','--param','ssp-buffer-size=4');
    }

    # Enable -fPIE by default
    if ($force_fPIE) {
        push(@args, '-fPIE');
    }
    if ($force_pie) {
        if ($linking) {
            # "-pie" is really only meaningful when calling the linker
            push(@args, '-pie', '-Wl,-z,relro', '-Wl,-z,now');
        }
    }

    # Enable glibc protections by default (-O2 should already be defined...)
    # (disable with -D_FORTIFY_SOURCE=0)
    if ($force_fortify) {
        push(@args,'-D_FORTIFY_SOURCE=2');
    }

    # Enable format string checking
    if ($force_format) {
        push(@args,'-Wformat','-Wformat-security','-Werror=format-security');
    }
}

my $arg0 = File::Spec->rel2abs(basename($0),dirname($0));

my $tool = "/usr/bin/gcc";

my @target = ($tool, @args, @ARGV);

exec @target or die "Unable to exec $target[0]: $!\n";
